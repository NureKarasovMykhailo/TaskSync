1 ПОБУДОВА UML ДІАГРАМИ ПРЕЦЕДЕНТІВ

На діаграмі виділено двох акторів: робітника, який використовує IoT 
пристрій, та back-end частину програмної системи, куди IoT пристрій, буде 
відправляти дані.
Робітник має можливість вмикнути та вимкнути свій розумний пристрій.
Крім того, він має можливість розпочати збір даних (розпочати відлік часу, який він 
працював), зібрати усі дані про свій стан (температура тіла, пульс, час роботи) та 
переглянути їх. Також ці дані будуть відправлені на серверну частину програмної 
системи, для подальшої обробки.

2 ПОБУДОВА ДІАГРАМИ ВЗАЄМОДІЇ

Створення діаграми взаємодії, дає можливість наочно показати, як об’єкти
системи взаємодіють між собою в певному сценарії або випадку використання. 
Вона ілюструє послідовність викликів методів та обмін повідомлення між 
об’єктами, що допомагає зрозуміти динамічні аспекти системи.
Пристрій працює наступним чином: IoT пристрій отримує від робітника дані 
(пульс, температура, час роботи). Після чого дані виводяться користувачу, та 
відправляються на серверну частину, для обробки. На серверній частині 
відправлені дані зберігають у базу даних.

3 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

Для представлення робочих процесів та алгоритмів, у вигляді послідовностей 
дій та рішень, створюється діаграма діяльності. Також вона дає можливість 
моделювання бізнес – процесів та поведінки програмного забезпечення.
При увімкнені пристрою, він починає збирати дані, про стан користувача. Для 
відправки даних, пристрій під’єднується до мережі Інтернет, після чого відправляє 
дані на сервер, де вони зберігаються у базі даних.

4 ПОБУДОВА ДІАГРАМИ СТАНІВ

Розробка UML діаграми станів має за мету моделювання поведінки системи 
в залежності від її станів та подій, які впливають на ці стани.
IoT пристрій працює наступним чином: робітник вмикає свій пристрій, після 
чого при першому натисканні на кнопку, починається замір часу роботи працівника. 
При другому натисканні на кнопку відбувається отримання інформації з 
під’єднаних датчиків. Далі відбудеться спроба під’єднатися до мережі Інтернет. 
При успішному під’єднанні, отримані дані відправляться на серверну частину.

5 ОПИС ТЕХНОЛОГІЙ

IoT пристрій розроблений за допомогою платформи Arduino та эмулятору 
Wokwi.
Сам пристрій складається з мікроконтролеру ESP32, датчика температури
DHT22, датчику пульсу та звичайної кнопки.
IoT пристрій взаємодіє з серверною частиною за REST API та по протоколу 
HTTP.

6 ОПИС РОБОТИ IoT ПРИСТРОЮ

У програмному коді спочатку визначаються змінні, для підлючення до мережі 
Інтернет, шляху для відправки даних на сервер, та визначаються піни для датчиків 
та кнопки.
У функції setup() відбувається ініціалізації датчиків, підключення до мережі 
Інтернет та вивід відповідних повідомлень.
У функції loop від робітника очікується натискання на кнопку. При першому 
натисканні на кнопку зберігається час, коли він на неї натиснув. При другому 
натисканні вираховується різниця між другим та першим натисканням на кнопку, 
отримуються дані з датчика температури та датчику пульсу.
Після цього за допомогою бібліотеки HTTPClient, дані по визначеному 
маршруту та методу POST відправляються на серверну частину.